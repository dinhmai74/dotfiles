ff2364a0be3d20e46cc69efb36afe9a5|file:///Users/dinhmai/.config/nvim/key-mapping.vim|150|20|v|vim
	space
26be38f413fb8bfec2c7b478fae42cad|file:///Users/dinhmai/.config/nvim/key-mapping.vim|111|25|V|vim
	"Recovery commands from history through FZF
	nmap <space>y :History:<CR>
60e63331ce5baf0763bd48831a6e7be3|file:///Users/dinhmai/.config/nvim/key-mapping.vim|140|1|V|vim
	nmap <space>e :CocCommand explorer<CR>
	" frame command
	nmap <space>f :CommentFrameHashDash ""<Left>
	let g:multi_cursor_select_all_word_key = '<space>n'
41e230a44df4b131461d69ca842834df|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|33|1|V|cs
	            var user = _accountService.Authenticate(model.Email, model.Password);
c579b29733ea0890d406043aa46c0058|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|131|18|V|cs
	                { 
	
	                }
0cf31b2c283ce3431794586df7b0996d|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|128|13|v|cs
	    
1dc5a7232e294d16ba8a8a050ce0c615|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|131|17|V|cs
	                return Ba
11d46cf4b49ac43e2af2ebe1d9021f23|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|129|17|V|cs
	                .apiRep
52edf377474f501b193c08921a380ae7|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|129|17|V|cs
	                apiRep.Data
d6c3114b6b15be17f050323b2bbf55e7|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|129|17|V|cs
	                apiRep.
4a1a1cbf7fcb515818b5f569aedb9642|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|130|19|V|cs
	                  .
630f571e14b3a7c5fd4f6ca501524448|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|129|17|V|cs
	                AppException
0ee637117fdb29c6d7ebc2be67361dd1|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|129|17|V|cs
	                AppException.
bc95dfc14146aa23e43f2ea7af04d310|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|190|1|v|cs
	            
ea6ea234b15f86bc27e1e26c6f1a95b5|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|6|1|V|cs
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
b17f6b580cf9c76cad39e95f53e592b9|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|6|1|V|cs
	using System.Threading.Tasks;
0a2853ac4ed48b2cea346c888a25241a|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|191|11|V|cs
	          fsa
8f0d7d0b80610e50ec0a69f3a064bc78|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|201|20|V|cs
	            if( hello ){
	              fdasjf
	            }
6464a0442f74cb63c68704222b4fa6bb|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|201|13|V|cs
	            if(dfasf)
688cb479519256e816cc85e936d1bf7f|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|200|13|V|cs
	            Ok()
3e45161ac2b68b42a7c957de00e9b903|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/AccountsController.cs|200|13|V|cs
	            Ok
dd998020d0babd396ab84049e48c929e|file:///Users/dinhmai/.SpaceVim.d/init.toml|32|1|V|conf
	[[layers]]
293cccc644962c03dacb38a2bfdf5370|file:///Users/dinhmai/.SpaceVim.d/init.toml|32|1|V|conf
	name = "denite"
01a61c31980741b4fdd18f71a54d6005|file:///Users/dinhmai/.SpaceVim.d/init.toml|35|1|V|conf
	name = 'shell'
4229d691b07b13341da53f17ab9f2416|untitled:3|1|1|V|
	hell
d3b2dd209706f5d37f4a95440c895a68|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/App.js|16|1|V|javascript
	const Should
b5ae266d2595adb98755e07f33ca6f2f|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/App.js|19|3|V|javascript
	  =>
ee7876cc940301acf4f78ea10221d2dd|file:///Users/dinhmai/.SpaceVim.d/init.toml|44|11|v|conf
	denite
0e5567ab4ba8ae1b3e0aebdc3196859b|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/screens/home-screen/home-screen.tsx|108|1|V|typescriptreact
	denitedenitedenite
32230c2268e31aa721dcde0d8a6aebb8|untitled:3|2|1|V|
	fsdafds
f0899c34bde1583b28a436ff0041cd70|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/screens/home-screen/home-screen.tsx|86|5|V|typescriptreact
	    fsa
3d8bdb3dd643ccabc2ad963d5900357a|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/screens/home-screen/home-screen.tsx|86|5|V|typescriptreact
	    df
e7557324ff7c9cefde4165646f001d13|file:///Users/dinhmai/.SpaceVim.d/init.toml|56|1|V|conf
	    'dart'
8306a18e5a1cd5162bdb6ff92aab1286|file:///Users/dinhmai/.SpaceVim.d/init.toml|49|1|v|conf
	# The lsp layer has to be enabled too. SpaceVim converts the configuration in the lsp layer and then passes it to coc.
	# You can put your language servers here.
	[[layers]] 
	  name = 'lsp'
	  filetypes = [
	    'c',
	    'cpp',
	  ]
	  [layers.override_cmd]
	    c = ['ccls', '--log-file=/tmp/ccls.log']
	    cpp = ['ccls', '--log-file=/tmp/ccls.log']
	
	
7bb0edd98f22430a03b67f853e83c2ca|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|132|8|V|typescriptreact
	        
43689afcf14e7661e35efe739a30199c|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|131|7|V|typescriptreact
	      set () {
e82f3e56d2a6718da3f068e5e6f91343|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|131|7|V|typescriptreact
	      }
e1266b294c2e40821e79bda2f56cc9a7|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|131|7|V|typescriptreact
	      set () {
	      }
32039ce38eda62ab4df5557757866361|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|131|7|V|typescriptreact
	      spyOn(object, '<`2:method`>')<|0|>;
0a7b6349180fd5764acd34bb98602fe1|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app/app.tsx|131|20|V|typescriptreact
	      on('event_name', function(<`2:stream`>) {
	        <`3`>
	      });
20ad74a3b36e98305d36c7fbe3634f85|file:///Users/dinhmai/.SpaceVim.d/init.toml|26|16|v|conf
	SourceCodePro 
55b832ec80f9e53306578c577d22cdff|file:///Users/dinhmai/.SpaceVim.d/init.toml|26|16|v|conf
	Nerd 
6b147a8fb0cddd3996e40b6ea4baf7c0|file:///Users/dinhmai/.SpaceVim.d/init.toml|26|16|v|conf
	Font 
5d9b47bd3b65072e0d5daf55f01da086|file:///Users/dinhmai/.SpaceVim.d/init.toml|26|16|v|conf
	Mono
0544ed93c22d5e1c869010c4515a7401|untitled:9|1|1|V|
	fdsaf
0663613e225dc45b9ee601d3cd6b0fef|untitled:3|1|1|V|
	fdadf
a2a4072f2006541152e924a81f3bf1ac|file:///Users/dinhmai/.SpaceVim.d/init.toml|26|5|V|conf
	    guifont = "Fira Code:h15"
ecb46007f99539d3913332ae978751c6|file:///Users/dinhmai/workplace/project/uit/bowie/mobile/app.json|4|1|v|json
	    "slug": "bowie",
	    "pla
50e233152a792de076ee9c6abce47f70|file:///Users/dinhmai/workplace/project/dotnet/HollypocketBackend/HollypocketBackend/Controllers/ProductsController.cs|21|13|V|cs
	            _p
7c7cb46ad3209f3039cf6622cdba30a7|file:///Users/dinhmai/.config/nvim/coc-settings.json|12|5|V|jsonc
	    "c#",
d5c01f73a32c57b11b77f7c8a5f95098|file:///Users/dinhmai/.config/nvim/coc-settings.vim|17|1|V|vim
	  \ 'coc-yank', 
	  \ 'coc-omnisharp', 
69d3abdfe32d75cfa927f9c95edecca9|file:///Users/dinhmai/.config/nvim/key-mapping.vim|7|1|V|vim
	noremap <Leader>h :<C-u>split<CR>
ce4c4686b0becd2a21d133a07c99e8a8|file:///Users/dinhmai/.config/nvim/key-mapping.vim|7|1|V|vim
	noremap <Leader>v :<C-u>vsplit<CR>
937715d9f228690a912539b85874c9df|file:///Users/dinhmai/.config/nvim/init.vim|6|1|V|vim
	
	"*****************************************************************************
	"" Basic Settings
	"*****************************************************************************
	" general
	"" Encoding
	set encoding=utf-8
	set fileencoding=utf-8
	set fileencodings=utf-8
	" "" Fix backspace indent
	set backspace=indent,eol,start
	set listchars=tab:▸\ ,trail:· " Display extra whitespace characters
	set showcmd       " display incomplete commands
	set shell=zsh " Set bash as the prompt for Vim
	" "" Tabs. May be overridden by autocmd rules
	set tabstop=2
	set softtabstop=0
	set shiftwidth=2
	set termguicolors
	" " " always uses spaces instead of tab characters
	set expandtab
	
	" "" Enable hidden buffers
	set hidden
	" "" Fix backspace indent
	" "" Searching
	set hlsearch
	set incsearch
	set ignorecase
	set smartcase
	" " Mouse in visual modes
	set mouse=v
	" " Blink cursor on error instead of beeping
	set visualbell
	
	
	" set fileformats=unix,dos,mac
	" Yank and paste with the system clipboard
	" set clipboard=unnamed
	
	autocmd BufEnter * silent! :lcd%:p:h
	"*****************************************************************************
	"" Visual Settings
	"*****************************************************************************
	" syntax on
	set ruler
	set relativenumber
	let no_buffers_menu=1
	silent! colorscheme gruvbox
	set mousemodel=popup
	set guifont=Fira\ Code-Light:h1
	set t_Co=256
	set guioptions=egmrti
	" " set gfn=Monospace\ 10
	" "" Disable the blinking cursor.
	" " set gcr=a:blinkon0
	set scrolloff=3
	
	" "" Status bar
	set laststatus=2
	
	" "" Use modeline overrides
	set modeline
	set modelines=10
	
	set title
	set titleold="Terminal"
	set titlestring=%F
	set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
	" Search mappings: These will make it so that going to the next one in a
	" search will center on the line it's found in.
	nnoremap n nzzzv
	nnoremap N Nzzzv
	if exists("*fugitive#statusline")
	  set statusline+=%{fugitive#statusline()}
	endif
	
	
	" vim-airline
	let g:airline#extensions#branch#enabled = 1
	let g:airline#extensions#ale#enabled = 1
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tagbar#enabled = 1
	let g:airline_skip_empty_sections = 1
	
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	function! s:custom_jarvis_colors()
	  " coc.nvim color changes
	  colorscheme gruvbox
	  hi link CocErrorSign WarningMsg
	  hi link CocWarningSign Number
	  hi link CocInfoSign Type
	
	  " Make background transparent for many things
	  hi Normal ctermbg=NONE guibg=NONE
	  " hi NonText ctermbg=NONE guibg=NONE
	  hi LineNr ctermfg=NONE guibg=NONE
	  hi SignColumn ctermfg=NONE guibg=NONE
	  hi StatusLine guifg=#16252b guibg=#6699CC
	  hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " Try to hide vertical spit and end of buffer symbol
	  " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " Make background color transparent for git changes
	  hi SignifySignAdd guibg=NONE
	  hi SignifySignDelete guibg=NONE
	  hi SignifySignChange guibg=NONE
	
	  " Highlight git change signs
	  hi SignifySignAdd guifg=#99c794
	  hi SignifySignDelete guifg=#ec5f67
	  hi SignifySignChange guifg=#c594c5
	endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	colorscheme gruvbox
	
	
287095b8f1154ed234c250f0ed4ff55a|file:///Users/dinhmai/.config/nvim/plugins.vim|58|33|V|vim
	Plug 'leafgarland/typescript-vim'
	Plug 'peitalin/vim-jsx-typescript'
e0d94232e0dc88e7b5830c2ca911d8d9|file:///Users/dinhmai/.config/nvim/init.vim|102|1|V|vim
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
72a2d81eba19fa68e29f68f9b5163658|untitled:1|2|1|V|
	Ppplug 'leafgarland/typescript-vim'
d38b24ef60f8bb96a3c49161ad9d8797|untitled:1|2|1|V|
	Plug 'peitalin/vim-jsx-typescript'
b642cce5263bd361843272837fb99a78|file:///Users/dinhmai/.config/nvim/init.vim|91|1|V|vim
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
aa57ffa52401068fa5eb16be353ee284|file:///Users/dinhmai/.config/nvim/init.vim|82|1|V|vim
	
	
	" vim-airline
	let g:airline#extensions#branch#enabled = 1
	let g:airline#extensions#ale#enabled = 1
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tagbar#enabled = 1
	let g:airline_skip_empty_sections = 1
	
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
fbb8c923faed7ce686d32767c85d2667|file:///Users/dinhmai/.config/nvim/init.vim|83|1|v|vim
	
	" vim-airline
	let g:airline#extensions#branch#enabled = 1
	let g:airline#extensions#ale#enabled = 1
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tagbar#enabled = 1
	let g:airline_skip_empty_sections = 1
	
	
db5c5f56deb55655154ce64b2eedeabe|file:///Users/dinhmai/.config/nvim/init.vim|45|1|V|vim
	
	autocmd BufEnter * silent! :lcd%:p:h
	"*****************************************************************************
	"" Visual Settings
	"*****************************************************************************
	" syntax on
	set ruler
	set relativenumber
	let no_buffers_menu=1
	silent! colorscheme gruvbox
	set mousemodel=popup
	set guifont=Fira\ Code-Light:h1
	set t_Co=256
	" set guioptions=egmrti
	" " set gfn=Monospace\ 10
	" "" Disable the blinking cursor.
	" " set gcr=a:blinkon0
	set scrolloff=3
	
	" "" Status bar
	set laststatus=2
	
	" "" Use modeline overrides
	set modeline
	set modelines=10
	
	set title
	set titleold="Terminal"
	set titlestring=%F
	set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
	" Search mappings: These will make it so that going to the next one in a
	" search will center on the line it's found in.
	nnoremap n nzzzv
	nnoremap N Nzzzv
	if exists("*fugitive#statusline")
	  set statusline+=%{fugitive#statusline()}
	endif
	
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
f0747ffef483515a4304f377ea406655|file:///Users/dinhmai/.config/nvim/init.vim|57|1|V|vim
	set t_Co=256
	" set guioptions=egmrti
	" " set gfn=Monospace\ 10
	" "" Disable the blinking cursor.
	" " set gcr=a:blinkon0
	set scrolloff=3
	
	" "" Status bar
	set laststatus=2
	
	" "" Use modeline overrides
	set modeline
	set modelines=10
	
	set title
	set titleold="Terminal"
	set titlestring=%F
	set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
	" Search mappings: These will make it so that going to the next one in a
	" search will center on the line it's found in.
	nnoremap n nzzzv
	nnoremap N Nzzzv
	if exists("*fugitive#statusline")
	  set statusline+=%{fugitive#statusline()}
	endif
	
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
73be252ca82217b1458a25e6b4e99f15|file:///Users/dinhmai/.config/nvim/init.vim|54|1|v|vim
	silent
6daa64c60bfde7da2069929aa18933dc|file:///Users/dinhmai/.config/nvim/init.vim|55|1|V|vim
	" set mousemodel=popup
	set guifont=Fira\ Code-Light:h1
	set t_Co=256
	" set guioptions=egmrti
	" " set gfn=Monospace\ 10
	" "" Disable the blinking cursor.
	" " set gcr=a:blinkon0
	set scrolloff=3
	
	" "" Status bar
	set laststatus=2
	
	" "" Use modeline overrides
	set modeline
	set modelines=10
	
	set title
	set titleold="Terminal"
	set titlestring=%F
	set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
	" Search mappings: These will make it so that going to the next one in a
	" search will center on the line it's found in.
	nnoremap n nzzzv
	nnoremap N Nzzzv
	if exists("*fugitive#statusline")
	  set statusline+=%{fugitive#statusline()}
	endif
	
	" Whitespace
	set wrap
	set textwidth=0
	set wrapmargin=0
	set formatoptions=tcqrn1
	set tabstop=2
	set shiftwidth=2
	set softtabstop=2
	set expandtab
	set breakindent
	set noshiftround
	
	" Cursor motion
	set scrolloff=3
	set backspace=indent,eol,start
	set matchpairs+=<:> " use % to jump between pairs
	
	" Rendering
	set ttyfast
	
	let python_highlight_all=1
	syntax on
	
	"*****************************************************************************
	"" Abbreviations
	"*****************************************************************************
	"" no one is really happy until you have this shortcuts
	cnoreabbrev W! w!
	cnoreabbrev Q! q!
	cnoreabbrev q1 q!
	cnoreabbrev w1 w!
	cnoreabbrev Qall! qall!
	cnoreabbrev Wq wq
	cnoreabbrev Wa wa
	cnoreabbrev wQ wq
	cnoreabbrev WQ wq
	cnoreabbrev W w
	cnoreabbrev Q q
	cnoreabbrev Qall qall
	cabbrev t tabnew
	nnoremap ; :
	vnoremap ; :
	
	
	"*****************************************************************************
	"" Commands
	"*****************************************************************************
	" remove trailing whitespaces
	command! FixWhitespace :%s/\s\+$//e
	
	"*****************************************************************************
	"" Convenience variables
	"*****************************************************************************
	
	" Reload icons after init source
	if exists('g:loaded_webdevicons')
	  call webdevicons#refresh()
	endif
	
	
	"*****************************************************************************
	"" Autocmd Rules
	"*****************************************************************************
	"" The PC is fast enough, do syntax highlight syncing from start unless 200 lines
	augroup vimrc-sync-fromstart
	  autocmd!
	  autocmd BufEnter * :syntax sync maxlines=200
	augroup END
	
	"" Remember cursor position
	augroup vimrc-remember-cursor-position
	  autocmd!
	  autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
	augroup END
	
	"" txt
	augroup vimrc-wrapping
	  autocmd!
	  autocmd BufRead,BufNewFile *.txt call s:setupWrapping()
	augroup END
	
	"" make/cmake
	augroup vimrc-make-cmake
	  autocmd!
	  autocmd FileType make setlocal noexpandtab
	  autocmd BufNewFile,BufRead CMakeLists.txt setlocal filetype=cmake
	augroup END
	
	set autoread
	
	
	" ============================================================================ "
	" ===                      CUSTOM COLORSCHEME CHANGES                      === "
	" ============================================================================ "
	"
	" Add custom highlights in method that is executed every time a colorscheme is sourced
	" See https://gist.github.com/romainl/379904f91fa40533175dfaec4c833f2f for details
	" function! s:custom_jarvis_colors()
	  " " coc.nvim color changes
	  " colorscheme gruvbox
	  " hi link CocErrorSign WarningMsg
	  " hi link CocWarningSign Number
	  " hi link CocInfoSign Type
	
	  " " Make background transparent for many things
	  " hi Normal ctermbg=NONE guibg=NONE
	  " " hi NonText ctermbg=NONE guibg=NONE
	  " hi LineNr ctermfg=NONE guibg=NONE
	  " hi SignColumn ctermfg=NONE guibg=NONE
	  " hi StatusLine guifg=#16252b guibg=#6699CC
	  " hi StatusLineNC guifg=#16252b guibg=#16252b
	
	  " " Try to hide vertical spit and end of buffer symbol
	  " " hi VertSplit gui=NONE guifg=#17252c guibg=#17252c
	  " " hi EndOfBuffer ctermbg=NONE ctermfg=NONE guibg=#17252c guifg=#17252c
	
	  " " Make background color transparent for git changes
	  " hi SignifySignAdd guibg=NONE
	  " hi SignifySignDelete guibg=NONE
	  " hi SignifySignChange guibg=NONE
	
	  " " Highlight git change signs
	  " hi SignifySignAdd guifg=#99c794
	  " hi SignifySignDelete guifg=#ec5f67
	  " hi SignifySignChange guifg=#c594c5
	" endfunction
	
	" autocmd! ColorScheme * call TrailingSpaceHighlights()
	" autocmd! ColorScheme * call s:custom_jarvis_colors()
	" call s:custom_jarvis_colors()
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
	" colorscheme gruvbox
cb04fee2673ee8ed2c86c0805b037219|file:///Users/dinhmai/.config/nvim/init.vim|5|1|v|vim
	let g:rainbow_active = 1
	
	"*****************************************************************************
	"" Basic Settings
	"*****************************************************************************
	" general
	"" Encoding
	set encoding=utf-8
	set fileencoding=utf-8
	set fileencodings=utf-8
	" "" Fix backspace indent
	set backspace=indent,eol,start
	set listchars=tab:▸\ ,trail:· " Display extra whitespace characters
	set showcmd       " display incomplete commands
	set shell=zsh " Set bash as the prompt for Vim
	" "" Tabs. May be overridden by autocmd rules
	set tabstop=2
	set softtabstop=0
	set shiftwidth=2
	set termguicolors
	" " " always uses spaces instead of tab characters
	set expandtab
	
	" "" Enable hidden buffers
	set hidden
	" "" Fix backspace indent
	" "" Searching
	set hlsearch
	set incsearch
	set ignorecase
	set smartcase
	" " Mouse in visual modes
	set mouse=v
	" " Blink cursor on error instead of beeping
	s
6c7998c7d2a5b108f758009143791bf9|file:///Users/dinhmai/.config/nvim/init.vim|5|1|V|vim
	et visualbell
